diff -rupN linux-03.20.00.13.orig/drivers/usb/musb/cppi41_dma.c linux-03.20.00.13.new/drivers/usb/musb/cppi41_dma.c
--- linux-03.20.00.13.orig/drivers/usb/musb/cppi41_dma.c	2011-11-25 13:11:43.000000000 +0100
+++ linux-03.20.00.13.new/drivers/usb/musb/cppi41_dma.c	2013-09-20 18:23:34.771549966 +0200
@@ -623,8 +623,8 @@ static void cppi41_set_ep_size(struct cp
 	void *__iomem reg_base = cppi->musb->ctrl_base;
 	u8 ep_num = rx_ch->ch_num + 1;
 
-	if (pkt_size % 64)					// Lego patch
-		pkt_size = pkt_size + 64 - (pkt_size % 64); 	// Lego patch
+	//if (pkt_size % 64)					// Lego patch
+		//pkt_size = pkt_size + 64 - (pkt_size % 64); 	// Lego patch
 	musb_writel(reg_base, USB_GENERIC_RNDIS_EP_SIZE_REG(ep_num), pkt_size);
 }
 
@@ -712,14 +712,14 @@ static unsigned cppi41_next_rx_segment(s
 #ifdef CONFIG_USB_GADGET_MUSB_HDRC
 		gadget_driver = cppi->musb->gadget_driver;
 #endif
-//		if (!strcmp(gadget_driver->driver.name, "g_ether")) {		//PSP13
-//			cppi41_mode_update(rx_ch, USB_GENERIC_RNDIS_MODE);	//PSP13
-//		} else {							//PSP13
-		if (!strcmp(gadget_driver->driver.name, "g_ether")) {		//Lego Patch
+		if (!strcmp(gadget_driver->driver.name, "g_ether")) {		//PSP13
+			cppi41_mode_update(rx_ch, USB_GENERIC_RNDIS_MODE);	//PSP13
+		} else {							//PSP13
+		//if (!strcmp(gadget_driver->driver.name, "g_ether")) {		//Lego Patch
 			max_rx_transfer_size = 512;
 			cppi41_mode_update(rx_ch, USB_TRANSPARENT_MODE);
-		} else {							//lego patch
-			cppi41_mode_update(rx_ch, USB_GENERIC_RNDIS_MODE);	//Lego patch
+		//} else {							//lego patch
+			//cppi41_mode_update(rx_ch, USB_GENERIC_RNDIS_MODE);	//Lego patch
 		}
 		pkt_len = 0;
 		if (rx_ch->length < max_rx_transfer_size)
diff -rupN linux-03.20.00.13.orig/drivers/usb/musb/musb_core.c linux-03.20.00.13.new/drivers/usb/musb/musb_core.c
--- linux-03.20.00.13.orig/drivers/usb/musb/musb_core.c	2011-11-25 13:04:11.000000000 +0100
+++ linux-03.20.00.13.new/drivers/usb/musb/musb_core.c	2013-09-20 18:23:56.263551052 +0200
@@ -1066,14 +1066,14 @@ static struct fifo_cfg __initdata mode_1
 static struct fifo_cfg __initdata mode_2_cfg[] = {
 { .hw_ep_num = 1, .style = FIFO_TX,   .maxpacket = 1024, },
 { .hw_ep_num = 1, .style = FIFO_RX,   .maxpacket = 1024, },
-//{ .hw_ep_num = 2, .style = FIFO_TX,   .maxpacket = 512, }, //PSP13
-//{ .hw_ep_num = 2, .style = FIFO_RX,   .maxpacket = 512, }, //PSP13
-//{ .hw_ep_num = 3, .style = FIFO_TX,   .maxpacket = 512, }, //PSP13
-{ .hw_ep_num = 2, .style = FIFO_TX,   .maxpacket = 64, }, //Lego patch
-{ .hw_ep_num = 2, .style = FIFO_RX,   .maxpacket = 64, }, //Lego patch
-{ .hw_ep_num = 3, .style = FIFO_TX,   .maxpacket = 1024, }, //Lego patch
-//{ .hw_ep_num = 4, .style = FIFO_RXTX, .maxpacket = 256, }, //PSP13
-{ .hw_ep_num = 4, .style = FIFO_RXTX, .maxpacket = 128, }, //Lego patch
+{ .hw_ep_num = 2, .style = FIFO_TX,   .maxpacket = 512, }, //PSP13
+{ .hw_ep_num = 2, .style = FIFO_RX,   .maxpacket = 512, }, //PSP13
+{ .hw_ep_num = 3, .style = FIFO_TX,   .maxpacket = 512, }, //PSP13
+//{ .hw_ep_num = 2, .style = FIFO_TX,   .maxpacket = 64, }, //Lego patch
+//{ .hw_ep_num = 2, .style = FIFO_RX,   .maxpacket = 64, }, //Lego patch
+//{ .hw_ep_num = 3, .style = FIFO_TX,   .maxpacket = 1024, }, //Lego patch
+{ .hw_ep_num = 4, .style = FIFO_RXTX, .maxpacket = 256, }, //PSP13
+//{ .hw_ep_num = 4, .style = FIFO_RXTX, .maxpacket = 128, }, //Lego patch
 };
 
 /* mode 3 - fits in 4KB */
